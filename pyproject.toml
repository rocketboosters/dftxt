[tool.poetry]
name = "dftxt"
version = "1.0.2"
description = "Human-friendly, VCS-friendly file format for Python Pandas and Polars DataFrames."
authors = ["Scott Ernst <swernst@gmail.com>"]
license = "Apache Version 2.0"
readme = "README.md"
homepage = "https://github.com/rocketboosters/dftxt"
repository = "https://github.com/rocketboosters/dftxt"
documentation = "https://github.com/rocketboosters/dftxt"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
  "Topic :: Software Development :: Testing",
  "Topic :: File Formats"
]
exclude = ["dfttxt/tests"]

[tool.poetry.scripts]
dftxt = "dftxt.cli:main"

[tool.poetry.dependencies]
python = "^3.9"
pytz = ">=2020.1"
pandas = {version = ">=2.0.0", optional = true}
polars = {version = "^0.20.5", optional = true}
pyarrow = {version = "^14.0.2", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
taskipy = "^1.12.2"
mypy = "^1.8.0"
seaborn = "^0.13.1"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.5.0"
pydocstyle = "^6.3.0"
ruff = "^0.1.14"

[tool.poetry.extras]
pandas = ["pandas", "pyarrow"]
polars = ["polars"]
all = ["pandas", "polars", "pyarrow"]

[tool.taskipy.tasks]
mypy = "mypy . --install-types --non-interactive  --namespace-packages --ignore-missing-imports"
pydocstyle = "pydocstyle ."
format = "ruff format ."
lint = "ruff check . && task mypy && task pydocstyle"
test = "pytest . --cov-report=term-missing --cov-report=xml --cov=.  -n auto"
check = "task style && task lint && task test"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
